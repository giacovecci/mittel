---
// src/layouts/LandingLayout.astro
interface Props {
    title?: string;
    backgroundImageUrl?: string;
    backgroundAltText?: string; 
}
const { 
    title = 'Mittel.TV', 
    backgroundImageUrl = '/uploads/placeholder-landing-bg.jpg',
    backgroundAltText = 'Abstract background image' 
} = Astro.props;
---
<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap" rel="stylesheet">
    <title>{title}</title>
    
    <script is:inline>
      const THEME_KEY = 'theme-preference';
      const THEME_CLASS_LIGHT = 'light-mode';
      const THEME_CLASS_DARK = 'dark-mode'; // This variable isn't actively used to apply dark theme with current CSS

      const getThemePreference = () => {
        if (typeof localStorage !== 'undefined') {
          const storedTheme = localStorage.getItem(THEME_KEY);
          if (storedTheme) {
            return storedTheme;
          }
        }
        // Default to 'light' if no theme is stored in localStorage
        return 'light'; 
      };

      const applyTheme = (theme) => {
        document.documentElement.classList.remove(THEME_CLASS_LIGHT, THEME_CLASS_DARK);
        if (theme === 'light') {
          document.documentElement.classList.add(THEME_CLASS_LIGHT);
        } else {
          // Dark theme is applied by removing THEME_CLASS_LIGHT, 
          // as CSS defaults to dark theme styles.
        }
      };

      // Make currentTheme available globally on window for other scripts if needed
      window.currentTheme = getThemePreference();
      applyTheme(window.currentTheme);

      window.toggleTheme = () => {
        window.currentTheme = window.currentTheme === 'light' ? 'dark' : 'light';
        localStorage.setItem(THEME_KEY, window.currentTheme);
        applyTheme(window.currentTheme);
        document.dispatchEvent(new CustomEvent('themechanged', { detail: { theme: window.currentTheme } }));
      };
    </script>

    <style is:global>
        @import '../styles/global.css'; 

        html {
            height: 100%; 
        }
        body.landing-body-fullscreen {
            background-image: var(--landing-bg-image-url-var);
            background-size: cover;
            background-position: center center;
            background-attachment: fixed; 
            background-repeat: no-repeat;
            
            min-height: 100%; 
            width: 100%;
            margin: 0;
            
            display: flex; 
            flex-direction: column;
            align-items: center;    
            justify-content: center;
            
            padding: var(--spacing-xl) var(--spacing-lg); 

            color: var(--color-text-unified); 
            text-align: center;
            overflow-y: auto; 
            box-sizing: border-box;
            font-size: var(--font-size-desktop-unified); 
            line-height: var(--line-height-unified);
            background-color: var(--color-background); 
        }
    </style>
    <style define:vars={{ 'landing-bg-image-url-var': `url('${backgroundImageUrl}')` }}>
    </style>
</head>
<body class="landing-body-fullscreen">
    <slot /> 
</body>
</html>