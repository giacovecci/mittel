---
// src/components/FeedEntry.astro
export interface Props {
    entryId: string;
}
const { entryId } = Astro.props;

// Dummy content - replace later
const title = "Sample Project Title";
const textLeft = "This is the left content area within the feed entry. It might contain descriptions or details.";
const textRight = "This is the right content area. Perhaps metadata, or an image placeholder below.";
---
<article class="feed-entry" id={entryId}>
    <h3>{title}</h3>
    <div class="entry-content-wrapper">
        <div class="entry-column entry-column-left">
            <p>{textLeft}</p>
            <div class="placeholder-media">LEFT MEDIA</div>
        </div>
        <div class="entry-column entry-column-right">
            <p>{textRight}</p>
            <div class="placeholder-media">RIGHT MEDIA</div>
        </div>
    </div>
    <hr class="entry-separator" />
</article>

<style>
    /* Define local fallbacks or component-specific variables if needed */
    :root {
        /* Use global variable names primarily */
        /* Default gap for desktop feed entries */
        --feed-entry-column-gap: var(--column-gap-desktop, var(--spacing-lg));
    }

    .feed-entry {
        /* Spacing below each entry */
        margin-bottom: var(--spacing-xl);
        /* Padding below content before separator */
        padding-bottom: var(--spacing-md);
        /* position: relative; */ /* Keep commented unless needed */
    }

    .feed-entry h3 {
        margin-top: 0;
        margin-bottom: var(--spacing-md); /* Consistent spacing */
        font-weight: var(--font-weight-unified); /* Use global normal weight */
        /* font-family: var(--font-family-unified); */ /* Inherited */
        font-size: 1.1em; /* Keep slightly larger */
        line-height: 1.3;
        /* color: var(--color-text-unified); */ /* Inherited */
    }

    .entry-content-wrapper {
        display: flex;
        gap: var(--feed-entry-column-gap); /* Use variable */
    }

    .entry-column {
        flex-basis: 0;
        flex-grow: 1;
        min-width: 0;
    }

    .entry-column p {
        margin-top: 0;
        /* Use global line-height */
        line-height: var(--line-height-unified);
        margin-bottom: var(--spacing-sm); /* Add default bottom margin for flow */
    }
    /* Remove bottom margin from last element in column */
     .entry-column > *:last-child {
         margin-bottom: 0;
     }


    .placeholder-media {
        min-height: 100px; /* Keep min-height for now */
        background-color: rgba(var(--color-text-unified-rgb, 204, 204, 204), 0.1); /* Use text color with alpha */
        display: flex;
        align-items: center;
        justify-content: center;
        margin-top: var(--spacing-md); /* Consistent spacing */
        font-size: 0.8em; /* Relative size */
        color: rgba(var(--color-text-unified-rgb, 204, 204, 204), 0.6); /* Lighter text color */
        border: var(--line-thickness) dashed var(--color-border); /* Use variables */
        padding: var(--spacing-md);
    }

    .entry-separator {
        border: none;
        /* Use global line thickness and color */
        border-top: var(--line-thickness) solid var(--color-border);
        /* Spacing above the separator */
        margin-top: var(--spacing-lg);
    }

     /* --- Mobile Adjustments for Feed Entry --- */
    @media (max-width: 768px) {
        :root { /* Override gap for mobile context if needed, though flex-direction changes things */
            --feed-entry-column-gap: var(--column-gap-mobile, var(--spacing-md));
        }
        .feed-entry {
             /* Adjust spacing for mobile if needed */
             margin-bottom: var(--spacing-lg);
             padding-bottom: var(--spacing-sm);
        }
         .entry-content-wrapper {
             flex-direction: column; /* Stack columns */
             gap: var(--spacing-md); /* Adjust vertical gap */
         }
         .placeholder-media {
             min-height: 80px;
             margin-top: var(--spacing-sm);
         }
         .entry-separator {
             margin-top: var(--spacing-md);
         }
    }
</style>