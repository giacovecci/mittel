---
import { Image } from 'astro:assets';
import { render as parseMarkdown } from './MarkdownRenderer.astro';

export interface Props {
  highlight: {
    title: string;
    summary?: string;
    thumbnail?: string;
    linkedFeedSlug?: string;
  };
}

const { highlight } = Astro.props;

const itemLink = highlight.linkedFeedSlug ? `#${highlight.linkedFeedSlug}` : '#';
const ariaLabel = highlight.linkedFeedSlug ? `Read more about ${highlight.title}` : highlight.title;

const contentFlexStyle = highlight.thumbnail 
  ? `--highlight-bg-image: url('${highlight.thumbnail}');` 
  : '';
---
<div class="highlight-item">
  <a 
    href={itemLink} 
    class:list={["highlight-link-wrapper", { 'is-clickable': highlight.linkedFeedSlug }]}
    data-target-id={highlight.linkedFeedSlug} 
    aria-label={ariaLabel}
  >
    <div class="highlight-content-flex" style={contentFlexStyle}>
      {/* Desktop-only thumbnail image - hidden on mobile by CSS */}
      {highlight.thumbnail && (
        <div class="highlight-thumbnail-container desktop-only-thumbnail">
          <Image 
            src={highlight.thumbnail} 
            alt={`Thumbnail for ${highlight.title}`} 
            width={200} 
            height={150} 
            format="webp"
            quality={70}
            loading="lazy" 
          />
        </div>
      )}
      {/* Desktop-only placeholder - hidden on mobile by CSS */}
      {!highlight.thumbnail && (
         <div class="highlight-thumbnail-placeholder desktop-only-thumbnail"></div>
      )}

      <div class="highlight-text-container">
        <h4 class="highlight-title">
          {highlight.title}
          {/* MODIFICATION: Added clickable indicator (arrow) */}
          {highlight.linkedFeedSlug && <span class="clickable-indicator"> â†’</span>}
        </h4>
        {highlight.summary && (
          <div 
            class="highlight-summary markdown-content" 
            set:html={await parseMarkdown(highlight.summary)}>
          </div>
        )}
      </div>
    </div>
  </a>
</div>

<style>
  .highlight-item {
    margin-bottom: var(--spacing-md);
    background-color: transparent;
    overflow: hidden; 
    transition: background-color 0.2s ease;
  }
  /* Only apply hover if it's a clickable link */
  .highlight-item:has(.highlight-link-wrapper.is-clickable):hover {
    background-color: var(--color-surface-light);
  }
  .highlight-link-wrapper {
    display: block;
    text-decoration: none;
    color: inherit;
    padding: var(--spacing-xs);
    border-radius: var(--border-radius-sm);
  }
  .highlight-link-wrapper:not(.is-clickable) {
    cursor: default; /* No pointer if not a link */
  }

  /* Default (Desktop) styles for highlight-content-flex */
  .highlight-content-flex {
    display: flex;
    align-items: flex-start; 
    gap: var(--spacing-sm);
  }

  /* Default (Desktop) thumbnail styles */
  .highlight-thumbnail-container, 
  .highlight-thumbnail-placeholder {
    flex-shrink: 0; 
    flex-grow: 0;   
    flex-basis: 25%; 
    max-width: 25%;  
    background-color: var(--color-background-muted);
    border-radius: var(--border-radius-sm);
    overflow: hidden;
    height: 180px; /* Desktop height for thumbnail */
  }
  .highlight-thumbnail-placeholder {
    background-color: transparent;
  }
  .highlight-thumbnail-container :global(img) {
    width: 100%;
    height: 100%; 
    object-fit: cover; 
    display: block;
  }

  /* Default (Desktop) text container styles */
  .highlight-text-container {
    flex-grow: 1; 
    flex-basis: 0; 
    min-width: 0;  
  }
  .highlight-title {
    font-size: 1em;
    font-weight: var(--font-weight-bold);
    margin-top: 0; 
    margin-bottom: var(--spacing-xxs);
    color: var(--color-text-unified); 
    line-height: 1.3;
    transition: color 0.2s ease;
    /* display: flex; /* Optional: if more complex alignment with arrow is needed */
    /* align-items: center; */
  }
  .highlight-item:has(.highlight-link-wrapper.is-clickable):hover .highlight-title {
    color: var(--color-accent);
  }
  
  /* MODIFICATION: Styles for the clickable indicator */
  .clickable-indicator {
    display: inline-block; /* Keeps it on the same line */
    margin-left: var(--spacing-xxs);
    color: var(--color-accent); /* Make it stand out a bit by default */
    opacity: 0.7; /* Slightly subdued until hover */
    transition: opacity 0.2s ease, color 0.2s ease, transform 0.2s ease;
  }
  .highlight-item:has(.highlight-link-wrapper.is-clickable):hover .clickable-indicator {
    opacity: 1;
    /* transform: translateX(2px); Optional: slight move on hover */
    /* Color will already be var(--color-accent) due to title hover, or can be set explicitly */
  }


  .highlight-summary {
    font-size: 1em;
    line-height: var(--line-height-unified);
    color: var(--color-text-secondary); 
    overflow-wrap: break-word;
    word-wrap: break-word; 
    hyphens: auto;
    transition: color 0.2s ease;
  }
  .highlight-summary :global(p) {
    margin-bottom: var(--spacing-xxs);
    font-size: inherit;
    line-height: inherit; 
  }
  .highlight-summary > :global(p):last-child {
    margin-bottom: 0;
  }

  /* --- MOBILE OVERRIDES (from previous step, ensure indicator is styled here too) --- */
  @media (max-width: 768px) {
    .highlight-link-wrapper {
      padding: 0; 
    }

    .desktop-only-thumbnail {
      display: none !important; 
    }

    .highlight-content-flex {
      display: flex; 
      flex-direction: column;
      justify-content: flex-end; 
      min-height: 200px; 
      aspect-ratio: 16 / 9; 
      background-image: var(--highlight-bg-image); 
      background-size: cover;
      background-position: center;
      border-radius: var(--border-radius-sm); 
      overflow: hidden; 
      position: relative; 
      gap: 0; 
      padding: var(--spacing-sm); 
    }
    .highlight-content-flex:not([style*="--highlight-bg-image"]) {
        background-color: var(--color-background-muted); 
        aspect-ratio: auto; 
        min-height: auto;
    }

    .highlight-text-container {
      background-color: rgba(0, 0, 0, 0.70); 
      padding: var(--spacing-sm);
      border-radius: var(--border-radius-sm); 
      width: 100%; 
      box-sizing: border-box;
      flex-grow: 0; 
      flex-basis: auto;
    }
    .highlight-content-flex:not([style*="--highlight-bg-image"]) .highlight-text-container {
        background-color: transparent; 
        padding: 0;
    }

    .highlight-title {
      color: #f5f5f5; 
      font-size: 1em; 
      line-height: 1.25;
    }
     /* Ensure title hover color for mobile overlay is distinct if needed */
    .highlight-item:has(.highlight-link-wrapper.is-clickable):hover .highlight-title {
      color: var(--color-accent-original); /* Or another light, bright color */
    }

    /* Indicator color on mobile overlay */
    .clickable-indicator {
      color: var(--color-accent-original); /* Ensure it's visible on the dark overlay */
      opacity: 0.8;
    }
    .highlight-item:has(.highlight-link-wrapper.is-clickable):hover .clickable-indicator {
       opacity: 1;
       /* color: #fff; /* Or another bright color for hover on overlay */
    }

    .highlight-summary {
      color: #dddddd; 
      font-size: 0.9em; 
      line-height: 1.5;
    }
    .highlight-summary :global(p) {
        margin-bottom: var(--spacing-xxs);
    }
  }
</style>