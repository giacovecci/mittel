---
import { Image } from 'astro:assets'; // Image component might still be used for desktop
import { render as parseMarkdown } from './MarkdownRenderer.astro';

export interface Props {
  highlight: {
    title: string;
    summary?: string;
    thumbnail?: string;
    linkedFeedSlug?: string;
  };
}

const { highlight } = Astro.props;

const itemLink = highlight.linkedFeedSlug ? `#${highlight.linkedFeedSlug}` : '#';
const ariaLabel = highlight.linkedFeedSlug ? `Read more about ${highlight.title}` : highlight.title;

// Prepare style for background image, only if thumbnail exists
const contentFlexStyle = highlight.thumbnail 
  ? `--highlight-bg-image: url('${highlight.thumbnail}');` 
  : '';
---
<div class="highlight-item">
  <a 
    href={itemLink} 
    class:list={["highlight-link-wrapper", { 'is-clickable': highlight.linkedFeedSlug }]}
    data-target-id={highlight.linkedFeedSlug} 
    aria-label={ariaLabel}
  >
    <div class="highlight-content-flex" style={contentFlexStyle}>
      {/* Desktop-only thumbnail image - hidden on mobile by CSS */}
      {highlight.thumbnail && (
        <div class="highlight-thumbnail-container desktop-only-thumbnail">
          <Image 
            src={highlight.thumbnail} 
            alt={`Thumbnail for ${highlight.title}`} 
            width={200} 
            height={150} 
            format="webp"
            quality={70}
            loading="lazy" 
          />
        </div>
      )}
      {/* Desktop-only placeholder - hidden on mobile by CSS */}
      {!highlight.thumbnail && (
         <div class="highlight-thumbnail-placeholder desktop-only-thumbnail"></div>
      )}

      {/* Text container is always present, styled differently on mobile */}
      <div class="highlight-text-container">
        <h4 class="highlight-title">{highlight.title}</h4>
        {highlight.summary && (
          <div class="highlight-summary markdown-content" set:html={await parseMarkdown(highlight.summary)}>
          </div>
        )}
      </div>
    </div>
  </a>
</div>

<style>
  .highlight-item {
    margin-bottom: var(--spacing-md);
    background-color: transparent;
    overflow: hidden; 
    transition: background-color 0.2s ease;
  }
  .highlight-item:has(.highlight-link-wrapper.is-clickable):hover {
    background-color: var(--color-surface-light);
  }
  .highlight-link-wrapper {
    display: block;
    text-decoration: none;
    color: inherit;
    padding: var(--spacing-xs);
    border-radius: var(--border-radius-sm);
  }
  .highlight-link-wrapper:not(.is-clickable) {
    cursor: default;
  }

  /* Default (Desktop) styles for highlight-content-flex */
  .highlight-content-flex {
    display: flex;
    align-items: flex-start; 
    gap: var(--spacing-sm);
  }

  /* Default (Desktop) thumbnail styles */
  .highlight-thumbnail-container, 
  .highlight-thumbnail-placeholder {
    flex-shrink: 0; 
    flex-grow: 0;   
    flex-basis: 25%; 
    max-width: 25%;  
    background-color: var(--color-background-muted);
    border-radius: var(--border-radius-sm);
    overflow: hidden;
    height: 180px; /* Desktop height for thumbnail */
  }
  .highlight-thumbnail-placeholder {
    background-color: transparent;
  }
  .highlight-thumbnail-container :global(img) {
    width: 100%;
    height: 100%; 
    object-fit: cover; 
    display: block;
  }

  /* Default (Desktop) text container styles */
  .highlight-text-container {
    flex-grow: 1; 
    flex-basis: 0; 
    min-width: 0;  
  }
  .highlight-title {
    font-size: 1em;
    font-weight: var(--font-weight-bold);
    margin-top: 0; 
    margin-bottom: var(--spacing-xxs);
    color: var(--color-text-unified); /* Theme-dependent */
    line-height: 1.3;
    transition: color 0.2s ease;
  }
  .highlight-item:has(.highlight-link-wrapper.is-clickable):hover .highlight-title {
    color: var(--color-accent); /* Theme-dependent accent */
  }
  .highlight-summary {
    font-size: 1em;
    line-height: var(--line-height-unified);
    color: var(--color-text-secondary); /* Theme-dependent */
    overflow-wrap: break-word;
    word-wrap: break-word; 
    hyphens: auto;
    transition: color 0.2s ease;
  }
  .highlight-summary :global(p) {
    margin-bottom: var(--spacing-xxs);
    font-size: inherit;
    line-height: inherit; 
  }
  .highlight-summary > :global(p):last-child {
    margin-bottom: 0;
  }

  /* --- MOBILE OVERRIDES --- */
  @media (max-width: 768px) {
    .highlight-link-wrapper {
      padding: 0; /* Remove padding from wrapper, apply to content-flex if needed */
    }

    .desktop-only-thumbnail {
      display: none !important; /* Hide desktop thumbnail/placeholder on mobile */
    }

    .highlight-content-flex {
      display: flex; /* Use flex to position text overlay */
      flex-direction: column;
      justify-content: flex-end; /* Push text container to the bottom */
      
      min-height: 200px; /* Example minimum height for the card */
      aspect-ratio: 16 / 9; /* Or another aspect ratio like 4/3 */
      
      background-image: var(--highlight-bg-image); /* Applied via inline style */
      background-size: cover;
      background-position: center;
      
      border-radius: var(--border-radius-sm); /* Apply radius to the card itself */
      overflow: hidden; /* Ensure text overlay doesn't break rounded corners */
      position: relative; /* For potential absolute positioning inside if needed */
      gap: 0; /* Reset gap from desktop */
      padding: var(--spacing-sm); /* Padding for the overall card content */
    }
    /* If no background image, provide a fallback */
    .highlight-content-flex:not([style*="--highlight-bg-image"]) {
        background-color: var(--color-background-muted); /* Fallback if no image */
        aspect-ratio: auto; /* Reset aspect ratio if no image, let content define height */
        min-height: auto;
    }


    .highlight-text-container {
      background-color: rgba(0, 0, 0, 0.70); /* Semi-transparent dark background */
      padding: var(--spacing-sm);
      border-radius: var(--border-radius-sm); 
      width: 100%; /* Take full width of the padded .highlight-content-flex */
      box-sizing: border-box;
      /* Reset flex properties from desktop if any */
      flex-grow: 0; 
      flex-basis: auto;
    }
    
    .highlight-content-flex:not([style*="--highlight-bg-image"]) .highlight-text-container {
        background-color: transparent; /* No overlay if no background image */
        padding: 0;
    }


    .highlight-title {
      color: #f5f5f5; /* Light color for readability on dark overlay */
      font-size: 1em; 
      line-height: 1.25;
    }
    .highlight-item:has(.highlight-link-wrapper.is-clickable):hover .highlight-title {
      color: var(--color-accent-original); /* Use original accent, less theme dependent for overlay */
    }

    .highlight-summary {
      color: #dddddd; /* Lighter color for readability on dark overlay */
      font-size: 0.9em; 
      line-height: 1.5;
    }
    .highlight-summary :global(p) {
        margin-bottom: var(--spacing-xxs);
    }
  }
</style>