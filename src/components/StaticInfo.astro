---
// src/components/StaticInfo.astro
import { Image } from 'astro:assets';
import headshotImage from '/src/assets/headshot-2.jpg';
import { getEntry } from 'astro:content';
import { marked } from 'marked'; // Import marked

const entry = await getEntry('general_content', 'static_info');
let rawIntroText = "Error: Intro text not loaded."; // Fallback for raw text

if (entry && entry.data && typeof entry.data.introText === 'string') {
    rawIntroText = entry.data.introText;
} else {
    console.error("StaticInfo.astro: Could not load introText from 'general_content/static_info.md'. Entry:", entry);
}

// Parse the Markdown string to HTML
const
 htmlIntroText = marked.parse(rawIntroText);

// Image details
const imageAltText = "a picture of Piotr Å»akowiecki";
const imageWidth = 854;
const imageHeight = 854;
---
<div class="static-info-wrapper">
    <div class="static-visual-container">
        <Image 
            src={headshotImage} 
            alt={imageAltText} 
            width={imageWidth} 
            height={imageHeight}
            format="webp"
            quality={80}      
            densities={[1, 1.5, 2]}
            loading="lazy"
        />
    </div>
    <div class="static-text-container markdown-content" set:html={htmlIntroText}>
        {/* The content will be injected here by set:html */}
        {/* Fallback if htmlIntroText is empty, though unlikely with default error message */}
        {htmlIntroText === "" && <p>Error: Intro text not loaded or empty.</p>}
    </div>
</div>

<style>
    /* Styles remain the same, but ensure .markdown-content styles from global.css apply */
    .static-info-wrapper { display: flex; flex-direction: column; gap: var(--spacing-lg); height: 100%; box-sizing: border-box; }
    .static-visual-container { width: 100%; }
    .static-visual-container :global(img) { display: block; max-width: 100%; height: auto; border-radius: var(--border-radius-sm); }
    
    .static-text-container {
        /* No specific styles needed here unless you want to override markdown defaults */
    }
    /* Paragraphs, lists, etc. inside .static-text-container will be styled by 
       .markdown-content rules in global.css or FeedEntry.astro's similar rules if you adapt them */
    .static-text-container p { /* This direct p rule might be too general if markdown has nested p's */
        margin-top: 0; /* Good to keep if the container itself is the direct parent of the first <p> */
        line-height: var(--line-height-unified); 
    }

    @media (max-width: 768px) and (orientation: portrait) { .static-info-wrapper { gap: var(--spacing-md); } }
</style>