/* src/styles/global.css */

/* 1. CSS Reset / Normalization */
*, *::before, *::after { box-sizing: border-box; }
body, h1, h2, h3, h4, h5, h6, p, ul, ol, figure, blockquote, dl, dd { margin: 0; }
button, input, textarea, select { font: inherit; margin: 0; }
ul, ol { padding: 0; /* list-style: none; */ } 
img, video, picture, svg { display: block; max-width: 100%; height: auto; }
a { color: inherit; text-decoration: none; }
button { background: none; border: none; padding: 0; cursor: pointer; color: inherit; }

/* 2. CSS Custom Properties (Variables) */
:root {
  /* --- DARK THEME (DEFAULT) --- */
  --font-family-unified: 'Inter', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
  --font-size-desktop-unified: clamp(0.9rem, 0.7rem + 0.2vw, 1rem);
  --font-size-mobile-content-responsive: clamp(0.85rem, 0.75rem + 0.3vw, 1.0rem);
  --font-size-mobile-header-responsive: clamp(1.1rem, 0.9rem + 0.6vw, 1.3rem);
  --font-weight-regular: 400;
  --font-weight-medium: 500;
  --font-weight-bold: 700;
  --font-weight-unified: var(--font-weight-regular);
  --line-height-unified: 1.6;
  
  /* Dark Theme Colors */
  --color-background-dark: #000000;
  --color-text-unified-dark: #ccc;
  --color-text-secondary-dark: #aaa;
  --color-border-subtle-dark: rgba(43, 43, 43, 0.65); /* #2b2b2b at 65% opacity */
  --color-border-light-dark: #444; /* For blockquotes, etc. */
  --color-background-muted-dark: #1a1a1a;
  --color-surface-light-dark: #2a2a2a; /* Used for some component backgrounds */
  --color-surface-light-hover-dark: #383838;
  --color-text-unified-rgb-dark: 204, 204, 204;

  /* --- LIGHT THEME --- */
  --color-background-light: #f0f0f0; /* Light grey background */
  --color-text-unified-light: #222222; /* Dark text */
  --color-text-secondary-light: #555555; /* Slightly lighter dark text */
  --color-border-subtle-light: rgba(180, 180, 180, 0.65); /* Lighter border */
  --color-border-light-light: #cccccc; /* Lighter equivalent for blockquotes */
  --color-background-muted-light: #e0e0e0; /* Lighter muted background */
  --color-surface-light-light: #ffffff; /* White for component backgrounds */
  --color-surface-light-hover-light: #f5f5f5; /* Slight hover for light surfaces */
  --color-text-unified-rgb-light: 34, 34, 34;

  /* --- THEME-AGNOSTIC / ACCENT COLORS --- */
  --color-accent-original: #e70221;
  --color-accent-hover-custom: #D8391E;
  --border-radius-sm: 4px;
  --line-thickness-subtle: 1px;

  /* --- DEFAULT TO DARK THEME VARIABLES --- */
  --color-background: var(--color-background-dark);
  --color-text-unified: var(--color-text-unified-dark);
  --color-text-secondary: var(--color-text-secondary-dark);
  --color-border-subtle: var(--color-border-subtle-dark);
  --color-border-light: var(--color-border-light-dark);
  --color-background-muted: var(--color-background-muted-dark);
  --color-surface-light: var(--color-surface-light-dark);
  --color-surface-light-hover: var(--color-surface-light-hover-dark);
  --color-text-unified-rgb: var(--color-text-unified-rgb-dark);
  
  /* These remain the same for both themes */
  --color-accent: var(--color-accent-original);
  --color-text-hover: var(--color-accent-hover-custom); /* This is an accent hover, so it can stay */
  --color-border: var(--color-border-subtle); /* Defaulting to subtle */
  --line-thickness: var(--line-thickness-subtle);

  /* Spacing variables */
  --spacing-unit: 1rem;
  --spacing-xxs: calc(0.25 * var(--spacing-unit));
  --spacing-xs: calc(0.5 * var(--spacing-unit));
  --spacing-sm: calc(0.75 * var(--spacing-unit));
  --spacing-md: var(--spacing-unit);
  --spacing-lg: calc(1.5 * var(--spacing-unit));
  --spacing-xl: calc(2 * var(--spacing-unit));
  --spacing-xxl: calc(3 * var(--spacing-unit));
  --spacing-content-side-padding: var(--spacing-xl);
  --content-padding-x-desktop: var(--spacing-lg);
  --content-padding-x-mobile: var(--spacing-md);
  --column-gap-desktop: var(--spacing-lg);
  --column-gap-mobile: var(--spacing-md);
  --desktop-info-column-width: 33.33%;
  --desktop-feed-column-width: calc(100% - var(--desktop-info-column-width));
}

/* --- APPLY LIGHT THEME WHEN .light-mode CLASS IS PRESENT ON HTML --- */
html.light-mode {
  --color-background: var(--color-background-light);
  --color-text-unified: var(--color-text-unified-light);
  --color-text-secondary: var(--color-text-secondary-light);
  --color-border-subtle: var(--color-border-subtle-light);
  --color-border-light: var(--color-border-light-light);
  --color-background-muted: var(--color-background-muted-light);
  --color-surface-light: var(--color-surface-light-light);
  --color-surface-light-hover: var(--color-surface-light-hover-light);
  --color-text-unified-rgb: var(--color-text-unified-rgb-light);

  /* Specific overrides for light mode if general variables are not enough */
  /* For example, if markdown link color needs adjustment */
  /* .markdown-content a { color: var(--color-accent-original); } */
  /* .markdown-content a:hover { color: var(--color-text-unified-light); } */
}


/* 3. Core Body & Universal Text Styling */
html { scroll-behavior: smooth; }
body {
  background-color: var(--color-background);
  font-family: var(--font-family-unified);
  font-size: var(--font-size-desktop-unified);
  font-weight: var(--font-weight-unified);
  line-height: var(--line-height-unified);
  color: var(--color-text-unified);
  min-height: 100vh;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  position: relative;
  transition: background-color 0.3s ease, color 0.3s ease; /* Smooth theme transition */
}

h1, h2, h3, h4, h5, h6 {
  font-weight: var(--font-weight-bold);
  line-height: 1.3;
  margin-bottom: var(--spacing-sm);
  transition: color 0.3s ease;
}
h3 { font-size: 1.1em; }

p, li, dt, dd, span, label {
  font-weight: inherit;
  font-size: inherit;
  line-height: inherit;
  margin-bottom: var(--spacing-sm);
  text-align: justify;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  hyphens: auto;
  overflow-wrap: break-word;
  word-wrap: break-word;
  transition: color 0.3s ease;
}

li::marker {
  color: var(--color-accent); /* Accent color for markers, should be fine for both themes */
}

.header-site-name-text {
    font-weight: var(--font-weight-bold);
}

/* 4. Basic Link & Button Hover Styling */
a:hover { color: var(--color-text-hover); } 
button:hover { color: var(--color-text-hover); }

button.active {
  color: var(--color-accent);
}
button { cursor: pointer; }

/* 5. Utility Classes */
.accent-text {
  color: var(--color-accent);
}

/* ================================== */
/* --- GLOBAL MOBILE OVERRIDES --- */
/* ================================== */
@media (max-width: 768px) {
    body {
        font-size: var(--font-size-mobile-content-responsive);
    }
    :root { /* This :root inside media query might not be ideal, but let's keep it for now if it's working for you */
        --spacing-content-side-padding: var(--spacing-lg);
    }
}

@media (max-width: 992px) and (orientation: landscape) {
  body {
      font-size: 0.8rem;
  }
}

/* --- Global Markdown Content Styles --- */
.markdown-content p,
.markdown-content ul,
.markdown-content ol,
.markdown-content blockquote {
    line-height: var(--line-height-unified);
    margin-bottom: var(--spacing-sm);
}

.markdown-content h1,
.markdown-content h2,
.markdown-content h3,
.markdown-content h4,
.markdown-content h5,
.markdown-content h6 {
    margin-top: var(--spacing-lg);
    margin-bottom: var(--spacing-xs);
    line-height: 1.2;
}
.markdown-content > *:first-child { margin-top: 0; }
.markdown-content h1:first-child,
.markdown-content h2:first-child,
.markdown-content h3:first-child,
.markdown-content h4:first-child,
.markdown-content h5:first-child,
.markdown-content h6:first-child {
    margin-top: 0;
}


.markdown-content ul,
.markdown-content ol {
    padding-left: var(--spacing-lg);
    list-style: revert;
}
.markdown-content ul { list-style-type: disc; }
.markdown-content ol { list-style-type: decimal; }
.markdown-content ul ul, .markdown-content ol ol { margin-bottom: 0; list-style-type: circle; }
.markdown-content ul ol, .markdown-content ol ul { margin-bottom: 0; }


.markdown-content li {
    margin-bottom: var(--spacing-xxs);
}
.markdown-content li > p:only-child {
    margin-bottom: 0;
}
.markdown-content li > p:last-child {
    margin-bottom: 0;
}


.markdown-content blockquote {
    margin-left: var(--spacing-sm);
    padding-left: var(--spacing-md);
    border-left: 3px solid var(--color-border-light);
    color: var(--color-text-secondary);
    font-style: italic;
    transition: color 0.3s ease, border-color 0.3s ease;
}
.markdown-content blockquote p {
    margin-bottom: var(--spacing-xs);
}

.markdown-content img {
    max-width: 100%;
    height: auto;
    display: block;
    margin-top: var(--spacing-md);
    margin-bottom: var(--spacing-md);
    border-radius: var(--border-radius-sm);
    background-color: var(--color-border-light); /* This will change with theme */
    transition: background-color 0.3s ease;
}

.markdown-content a {
    color: var(--color-accent-hover-custom); 
    text-decoration: underline;
    text-decoration-thickness: 1px;
    text-underline-offset: 2px;
    overflow-wrap: break-word;
    /* No transition needed here as accent color is theme-agnostic */
}
.markdown-content a:hover {
    color: var(--color-text-unified); /* This will change with theme */
    text-decoration: none;
}

.markdown-content hr {
    border: none;
    border-top: 1px solid var(--color-border); 
    margin-top: var(--spacing-lg);
    margin-bottom: var(--spacing-lg);
    transition: border-top-color 0.3s ease;
}

.markdown-content table {
    width: 100%;
    margin-bottom: var(--spacing-md);
    border-collapse: collapse;
    border: 1px solid var(--color-border-light);
    table-layout: fixed;
    transition: border-color 0.3s ease;
}
.markdown-content th,
.markdown-content td {
    padding: var(--spacing-xs) var(--spacing-sm);
    border: 1px solid var(--color-border-light);
    text-align: left;
    overflow-wrap: break-word;
    word-wrap: break-word;
    transition: border-color 0.3s ease;
}
.markdown-content th {
    background-color: var(--color-surface-light);
    font-weight: var(--font-weight-bold);
    transition: background-color 0.3s ease, color 0.3s ease;
}

.markdown-content pre {
    background-color: var(--color-background-muted);
    padding: var(--spacing-md);
    border-radius: var(--border-radius-sm);
    overflow-x: auto;
    margin-bottom: var(--spacing-md);
    font-family: 'Courier New', Courier, monospace;
    font-size: 0.9em;
    line-height: 1.4;
    transition: background-color 0.3s ease, color 0.3s ease; /* Color of text inside pre */
}
.markdown-content code { /* Inline code */
    background-color: var(--color-background-muted);
    padding: 0.1em 0.3em;
    border-radius: var(--border-radius-sm);
    font-family: 'Courier New', Courier, monospace;
    font-size: 0.9em;
    overflow-wrap: break-word;
    word-break: break-all;
    transition: background-color 0.3s ease, color 0.3s ease; /* Color of inline code text */
}
.markdown-content pre code { /* Code within pre blocks */
    background-color: transparent; /* No separate background for code inside pre */
    padding: 0;
    border-radius: 0;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
    overflow-wrap: normal;
    word-break: normal;
    /* Transition handled by parent pre */
}

.markdown-content iframe,
.markdown-content video,
.markdown-content embed,
.markdown-content object {
    max-width: 100% !important;
    width: 100% !important;
    height: auto !important;
    min-height: 200px;
    aspect-ratio: 16 / 9;
    display: block;
    border: none;
    box-sizing: border-box;
    background-color: var(--color-background-muted);
    transition: background-color 0.3s ease;
}

.markdown-content div[style*="width"] > iframe,
.markdown-content div[style*="width"] > video,
.markdown-content div[style*="width"] > embed,
.markdown-content div[style*="width"] > object {
    width: 100% !important;
    max-width: 100% !important;
    height: auto !important;
}
.markdown-content div[style*="width"] {
    width: auto !important;
    max-width: 100% !important;
    height: auto !important;
}
.markdown-content div[style*="height"] {
    height: auto !important;
    max-height: 100vh;
}// src/content/config.ts
import { defineCollection, z } from 'astro:content';

// --- Block Schemas (Used by 'feed' collection) ---
const twoColumnBlockSchema = z.object({
    type: z.literal('twoColumn'),
    left: z.string().optional(),
    right: z.string().optional(),
});
const fullWidthImageBlockSchema = z.object({
    type: z.literal('fullWidthImage'),
    image: z.string(),
    alt: z.string().optional(),
});
const fullWidthEmbedBlockSchema = z.object({
    type: z.literal('fullWidthEmbed'),
    embedCode: z.string(),
});
const fullWidthTextBlockSchema = z.object({
    type: z.literal('fullWidthText'),
    text: z.string(),
});
const horizontalGalleryBlockSchema = z.object({
    type: z.literal('horizontalGallery'),
    images: z.array(
        z.object({
            image: z.string(),
            alt: z.string().optional(),
        })
    ).optional(),
});

// --- Collection Definition: feed ---
const feed = defineCollection({
    type: 'content',
    schema: z.object({
        title: z.string(),
        date: z.date().optional(),
        thumbnail: z.string().optional(),
        contentBlocks: z.array(
            z.discriminatedUnion('type', [
                twoColumnBlockSchema,
                fullWidthImageBlockSchema,
                fullWidthEmbedBlockSchema,
                fullWidthTextBlockSchema,
                horizontalGalleryBlockSchema,
            ])
        ).optional(),
    }),
});

// --- Collection Definition: general_content ---
const general_content = defineCollection({
    type: 'content',
    schema: z.object({
        // Existing fields
        introText: z.string().optional(),
        aboutPageContent: z.string().optional(),
        contactPageImage: z.string().optional(),
        contactPageImageAlt: z.string().optional(),
        contactPageText: z.string().optional(),

        // ADDED: Fields for the Landing Page
        landingPageBackgroundImage: z.string().optional(),
        landingPageBackgroundImageAlt: z.string().optional(), // Good practice for accessibility
        landingPageSiteName: z.string().optional(),
        landingPageTagline: z.string().optional(),
        landingPageLocation: z.string().optional(),

    }).passthrough(),
});

// --- Collection Definition: highlights ---
const highlights = defineCollection({
    type: 'content',
    schema: z.object({
        title: z.string(),
        order: z.number().optional(),
        summary: z.string().optional(),
        thumbnail: z.string().optional(),
        linkedFeedSlug: z.string().optional(),
        isSeparator: z.boolean().optional(),
    }),
});

// --- Export Collections ---
export const collections = {
  feed,
  general_content,
  highlights,
};